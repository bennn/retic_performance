from retic.runtime import *
from retic.guarded import *
from retic.typing import *
from retic import List, Tuple, Void, String, Int


class Player:
    retic_class_type = Class('Player', {'get_index_of_closest_stack': Function(NamedParameters([('self', Dyn), ('cards', Dyn), ('card', Dyn)]), Dyn), 'choose_correct_stack': Function(NamedParameters([('self', Dyn), ('stacks', Dyn)]), Dyn), '__init__': Function(NamedParameters([('self', Dyn), ('name', Dyn), ('cards', Dyn)]), Dyn), 'discard': Function(NamedParameters([('self', Dyn)]), Dyn), }, {})

    def __init__(self, name, cards):
        retic_cast(self, Dyn, Object('', {}), '\nplayer.py:16:8: Cannot write to attribute name in value %s because it is not an object. (code NON_OBJECT_WRITE)').name = name
        retic_cast(self, Dyn, Object('', {}), '\nplayer.py:17:8: Cannot write to attribute cards in value %s because it is not an object. (code NON_OBJECT_WRITE)').cards = cards
    __init__ = retic_cast(__init__, Dyn, Function(NamedParameters([('self', Dyn), ('name', Dyn), ('cards', Dyn)]), Dyn), "\nplayer.py:9:4: Function %s does not match specified type Function(['self:Dyn', 'name:Dyn', 'cards:Dyn'], Dyn). Consider changing the type or setting it to Dyn. (code BAD_FUNCTION_INJECTION)")

    def discard(self):
        face_values = retic_cast(list, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nplayer.py:24:22: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(retic_cast(map, Dyn, Function(AnonymousParameters([Function(NamedParameters([('card', Dyn)]), Dyn), Dyn]), Dyn), '\nplayer.py:24:27: Expected function of type Function(["Function([\'card:Dyn\'], Dyn)", \'Dyn\'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')((lambda card: card[0]), retic_cast(self, Dyn, Object('', {'cards': Dyn, }), '\nplayer.py:24:53: Accessing nonexistant object attribute cards from value %s. (code WIDTH_DOWNCAST)').cards))
        discarded_index = retic_cast(retic_cast(face_values, Dyn, Object('', {'index': Dyn, }), '\nplayer.py:25:26: Accessing nonexistant object attribute index from value %s. (code WIDTH_DOWNCAST)').index, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nplayer.py:25:26: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(retic_cast(max, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nplayer.py:25:44: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(face_values))
        return discarded_index
    discard = retic_cast(discard, Dyn, Function(NamedParameters([('self', Dyn)]), Dyn), "\nplayer.py:19:4: Function %s does not match specified type Function(['self:Dyn'], Dyn). Consider changing the type or setting it to Dyn. (code BAD_FUNCTION_INJECTION)")

    def choose_correct_stack(self, stacks):
        top_cards = retic_cast(list, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nplayer.py:34:20: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(retic_cast(map, Dyn, Function(AnonymousParameters([Function(NamedParameters([('stack', Dyn)]), Dyn), Dyn]), Dyn), '\nplayer.py:34:25: Expected function of type Function(["Function([\'stack:Dyn\'], Dyn)", \'Dyn\'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')((lambda stack: stack[(- 1)]), stacks))
        discarded_index = retic_cast(retic_cast(self, Dyn, Object('', {'discard': Dyn, }), '\nplayer.py:35:26: Accessing nonexistant object attribute discard from value %s. (code WIDTH_DOWNCAST)').discard, Dyn, Function(AnonymousParameters([]), Dyn), '\nplayer.py:35:26: Expected function of type Function([], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')()
        discarded = retic_cast(self, Dyn, Object('', {'cards': Dyn, }), '\nplayer.py:36:20: Accessing nonexistant object attribute cards from value %s. (code WIDTH_DOWNCAST)').cards[discarded_index]
        if (discarded[0] < retic_cast(min, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nplayer.py:37:26: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(retic_cast(list, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nplayer.py:37:30: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(retic_cast(map, Dyn, Function(AnonymousParameters([Function(NamedParameters([('card', Dyn)]), Dyn), Dyn]), Dyn), '\nplayer.py:37:35: Expected function of type Function(["Function([\'card:Dyn\'], Dyn)", \'Dyn\'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')((lambda card: card[0]), top_cards)))):
            sums = []
            for stack in stacks:
                bull_points = retic_cast(list, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nplayer.py:40:30: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(retic_cast(map, Dyn, Function(AnonymousParameters([Function(NamedParameters([('card', Dyn)]), Dyn), Dyn]), Dyn), '\nplayer.py:40:35: Expected function of type Function(["Function([\'card:Dyn\'], Dyn)", \'Dyn\'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)')((lambda card: card[1]), stack))
                sums.append(retic_cast(sum, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nplayer.py:41:28: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(bull_points))
            return retic_cast(sums.index(retic_cast(min, Dyn, Function(AnonymousParameters([List(Dyn)]), Dyn), "\nplayer.py:42:30: Expected function of type Function(['List(Dyn)'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(sums)), Int, Dyn, '\nplayer.py:42:12: A return value of type Dyn was expected but a value %s was returned instead. (code RETURN_ERROR)')
        else:
            return retic_cast(retic_cast(self, Dyn, Object('', {'get_index_of_closest_stack': Dyn, }), '\nplayer.py:44:19: Accessing nonexistant object attribute get_index_of_closest_stack from value %s. (code WIDTH_DOWNCAST)').get_index_of_closest_stack, Dyn, Function(AnonymousParameters([Dyn, Dyn]), Dyn), "\nplayer.py:44:19: Expected function of type Function(['Dyn', 'Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(top_cards, discarded)
    choose_correct_stack = retic_cast(choose_correct_stack, Dyn, Function(NamedParameters([('self', Dyn), ('stacks', Dyn)]), Dyn), "\nplayer.py:28:4: Function %s does not match specified type Function(['self:Dyn', 'stacks:Dyn'], Dyn). Consider changing the type or setting it to Dyn. (code BAD_FUNCTION_INJECTION)")

    def get_index_of_closest_stack(self, cards, card):
        diffs = []
        for c in cards:
            diff = retic_cast(abs, Dyn, Function(AnonymousParameters([Dyn]), Dyn), "\nplayer.py:54:19: Expected function of type Function(['Dyn'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")((card[0] - c[0]))
            diffs.append(diff)
        return retic_cast(diffs.index(retic_cast(min, Dyn, Function(AnonymousParameters([List(Dyn)]), Dyn), "\nplayer.py:56:27: Expected function of type Function(['List(Dyn)'], Dyn) at call site but but value %s was provided instead. (code FUNC_ERROR)")(diffs)), Int, Dyn, '\nplayer.py:56:8: A return value of type Dyn was expected but a value %s was returned instead. (code RETURN_ERROR)')
    get_index_of_closest_stack = retic_cast(get_index_of_closest_stack, Dyn, Function(NamedParameters([('self', Dyn), ('cards', Dyn), ('card', Dyn)]), Dyn), "\nplayer.py:46:4: Function %s does not match specified type Function(['self:Dyn', 'cards:Dyn', 'card:Dyn'], Dyn). Consider changing the type or setting it to Dyn. (code BAD_FUNCTION_INJECTION)")
Player = retic_cast(Player, Dyn, Class('Player', {'get_index_of_closest_stack': Function(NamedParameters([('self', Dyn), ('cards', Dyn), ('card', Dyn)]), Dyn), 'choose_correct_stack': Function(NamedParameters([('self', Dyn), ('stacks', Dyn)]), Dyn), '__init__': Function(NamedParameters([('self', Dyn), ('name', Dyn), ('cards', Dyn)]), Dyn), 'discard': Function(NamedParameters([('self', Dyn)]), Dyn), }, {}), "\nplayer.py:4:0: Class %s does not match specified type Class(Player, {'get_index_of_closest_stack': Function(['self:Dyn', 'cards:Dyn', 'card:Dyn'], Dyn), 'choose_correct_stack': Function(['self:Dyn', 'stacks:Dyn'], Dyn), '__init__': Function(['self:Dyn', 'name:Dyn', 'cards:Dyn'], Dyn), 'discard': Function(['self:Dyn'], Dyn)}, ). Consider changing the type or setting it to Dyn. (code BAD_CLASS_INJECTION)")
