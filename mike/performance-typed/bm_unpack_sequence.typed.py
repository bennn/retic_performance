from retic.runtime import *
from retic.transient import *
from retic.typing import *
import optparse
import time
import util
from compat import xrange

def do_unpacking(iterations, timer, to_unpack):
    check_type_int(iterations)
    check_type_list(to_unpack)
    times = []
    for _ in check_type_function(xrange)(iterations):
        t0 = check_type_function(timer)()
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        (a, b, c, d, e, f, g, h, i, j) = check_type_tuple(to_unpack, 10)
        t1 = check_type_function(timer)()
        retic_check(check_type_function(times.append)((t1 - t0)), Void, '\nbm_unpack_sequence.py:420:8: Result of function call was expected to have type Void but instead has value %s. (code RETURN_CHECK)')
    return times
do_unpacking = check_type_function(do_unpacking)

def test_tuple_unpacking(iterations, timer):
    x = check_type_function(tuple)(check_type_function(range)(10))
    return do_unpacking(check_type_int(iterations), timer, check_type_list(x))
test_tuple_unpacking = check_type_function(test_tuple_unpacking)

def test_list_unpacking(iterations, timer):
    x = check_type_function(list)(check_type_function(range)(10))
    return do_unpacking(check_type_int(iterations), timer, check_type_list(x))
test_list_unpacking = check_type_function(test_list_unpacking)

def test_all(iterations, timer):
    tuple_data = test_tuple_unpacking(iterations, timer)
    list_data = test_list_unpacking(iterations, timer)
    return check_type_list([(x + y) for (x, y) in check_type_function(zip)(tuple_data, list_data)])
test_all = check_type_function(test_all)
if (__name__ == '__main__'):
    parser = check_type_function(check_type_object(optparse, ['OptionParser']).OptionParser)(usage='%prog [options] [test]', description='Test the performance of sequence unpacking.')
    check_type_function(util.add_standard_options_to)(parser)
    (options, args) = check_type_tuple(check_type_function(check_type_object(parser, ['parse_args']).parse_args)(), 2)
    tests = {'tuple': test_tuple_unpacking, 'list': test_list_unpacking, }
    if (check_type_function(len)(args) > 1):
        check_type_function(check_type_object(parser, ['error']).error)('Can only specify one test')
    elif (check_type_function(len)(args) == 1):
        func = check_type_function(check_type_function(tests.get)(args[0]))
        if (func is None):
            check_type_function(check_type_object(parser, ['error']).error)('Invalid test name')
        check_type_function(util.run_benchmark)(options, check_type_object(options, ['num_runs']).num_runs, func)
    else:
        check_type_function(util.run_benchmark)(options, check_type_object(options, ['num_runs']).num_runs, test_all)
